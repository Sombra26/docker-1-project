version: "3.8"
services:

# Lorsque le fichier Docker compose va dÃ©marrer le conteneur, ğŸ˜€
# le fichier Docker File sera automatiquement utilisÃ© pour la configuration ğŸ˜€
  app:
    build: .
    command: python -u app.py
    ports:
      - "5000:5000"
      
    # le "." reprÃ©sente le rÃ©pertoire sur lequel nous sommnes ğŸ˜€
    # Le chemin du rÃ©pertoire est dans le conteneur ğŸ˜€
    volumes:
      - .:/app
    links:
      - db
    
    # Le db est la configuration du conteneur de la base de donnÃ©es. ğŸ˜€
  db:
    image: mongo:latest 
    hostname: test_mongodb 
    environment:
      - MONGO_INITDB_DATABASE=animal_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    # les variables d'envorionnements sont configurÃ©es dans le fichier Dockerfile ğŸ˜€
    # ce qui permettra Ã  l'application Node de les utiliser se connecter Ã  la base de donnÃ©es ğŸ˜€

    # Lorsque le conteneur MongoDB va daÃ©marrer, ğŸ˜€
    # le script va se lancer dans le rÃ©pertoire du conteneur 'docker-entrypoint-initdb.d' ğŸ˜€
    # qui va se connecter au fichier de dÃ©part. ğŸ˜€
    volumes:
      - ./init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro

    # Le port correspond Ã  la base de donnÃ©e MongoDB ğŸ˜€
    ports: 
      - 27017:27017
